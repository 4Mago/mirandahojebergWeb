{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/components/hamburger/Navigation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport sanityClient from '../../../Client';\nconst variants = {\n  open: {\n    transition: {\n      staggerChildren: 0.07,\n      delayChildren: 0.2\n    }\n  },\n  closed: {\n    transition: {\n      staggerChildren: 0.05,\n      staggerDirection: -1\n    }\n  }\n};\nconst MenuLink = styled(Link)`\n\ttext-decoration: none;\n\tpadding-top: 20px;\n\twidth: 100%;\n\tcolor: black;\n`;\n_c = MenuLink;\nconst UL = styled(motion.ul)`\npadding: 25px;\nposition: absolute;\ndisplay: none;\ntop: 100px;\nwidth: 100px;\ntransition: 5s all ease;\n}\n`;\n_c2 = UL;\nconst List = styled(motion.li)`\n\tfont-size: 18px;\n\tcolor: black;\n`;\n_c3 = List;\nconst linkVariants = {\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: {\n        stiffness: 1000,\n        velocity: -100\n      }\n    }\n  },\n  closed: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: {\n        stiffness: 1000\n      }\n    }\n  }\n};\n\nconst Navigation = ({\n  isOpen,\n  toggle\n}) => {\n  _s();\n\n  const [header, setHeader] = useState('');\n  const menuList = useRef(null);\n  useEffect(() => {\n    let timer;\n    window.clearTimeout(timer);\n    let style = menuList.current.style;\n\n    if (style.display === 'none') {\n      style.display = 'block';\n    } else {\n      timer = window.setTimeout(() => {\n        style.display = 'none';\n      }, 300);\n    }\n  }, [isOpen]);\n  useEffect(() => {\n    const headerQuery = `*[_type == \"header\"]{\n    menu\n  }`;\n    sanityClient.fetch(headerQuery).then(header => {\n      header.forEach(header => {\n        setHeader(header);\n      });\n    });\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UL, {\n    ref: menuList,\n    variants: variants,\n    children: header.menu ? header.menu.map((item, id) => /*#__PURE__*/_jsxDEV(List, {\n      onClick: toggle,\n      variants: linkVariants,\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.95\n      },\n      children: [' ', /*#__PURE__*/_jsxDEV(MenuLink, {\n        to: item.link,\n        children: item.name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Navigation, \"X1/uj2WFPc2nb6RHTwntLGEjFr4=\");\n\n_c4 = Navigation;\nexport default Navigation;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuLink\");\n$RefreshReg$(_c2, \"UL\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"Navigation\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/components/hamburger/Navigation.jsx"],"names":["React","useState","useEffect","useRef","motion","Link","styled","sanityClient","variants","open","transition","staggerChildren","delayChildren","closed","staggerDirection","MenuLink","UL","ul","List","li","linkVariants","y","opacity","stiffness","velocity","Navigation","isOpen","toggle","header","setHeader","menuList","timer","window","clearTimeout","style","current","display","setTimeout","headerQuery","fetch","then","forEach","menu","map","item","id","scale","link","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport sanityClient from '../../../Client'\r\n\r\nconst variants = {\r\n\topen: {\r\n\t\ttransition: { staggerChildren: 0.07, delayChildren: 0.2 },\r\n\t},\r\n\tclosed: {\r\n\t\ttransition: { staggerChildren: 0.05, staggerDirection: -1 },\r\n\t},\r\n}\r\nconst MenuLink = styled(Link)`\r\n\ttext-decoration: none;\r\n\tpadding-top: 20px;\r\n\twidth: 100%;\r\n\tcolor: black;\r\n`\r\n\r\nconst UL = styled(motion.ul)`\r\npadding: 25px;\r\nposition: absolute;\r\ndisplay: none;\r\ntop: 100px;\r\nwidth: 100px;\r\ntransition: 5s all ease;\r\n}\r\n`\r\nconst List = styled(motion.li)`\r\n\tfont-size: 18px;\r\n\tcolor: black;\r\n`\r\nconst linkVariants = {\r\n\topen: {\r\n\t\ty: 0,\r\n\t\topacity: 1,\r\n\t\ttransition: {\r\n\t\t\ty: { stiffness: 1000, velocity: -100 },\r\n\t\t},\r\n\t},\r\n\tclosed: {\r\n\t\ty: 50,\r\n\t\topacity: 0,\r\n\t\ttransition: {\r\n\t\t\ty: { stiffness: 1000 },\r\n\t\t},\r\n\t},\r\n}\r\n\r\nconst Navigation = ({ isOpen, toggle }) => {\r\n\tconst [header, setHeader] = useState('')\r\n\tconst menuList = useRef(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tlet timer\r\n\t\twindow.clearTimeout(timer)\r\n\t\tlet style = menuList.current.style\r\n\t\tif (style.display === 'none') {\r\n\t\t\tstyle.display = 'block'\r\n\t\t} else {\r\n\t\t\ttimer = window.setTimeout(() => {\r\n\t\t\t\tstyle.display = 'none'\r\n\t\t\t}, 300)\r\n\t\t}\r\n\t}, [isOpen])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst headerQuery = `*[_type == \"header\"]{\r\n    menu\r\n  }`\r\n\t\tsanityClient.fetch(headerQuery).then(header => {\r\n\t\t\theader.forEach(header => {\r\n\t\t\t\tsetHeader(header)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\treturn\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<UL ref={menuList} variants={variants}>\r\n\t\t\t{header.menu\r\n\t\t\t\t? header.menu.map((item, id) => (\r\n\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\tonClick={toggle}\r\n\t\t\t\t\t\t\tvariants={linkVariants}\r\n\t\t\t\t\t\t\twhileHover={{ scale: 1.1 }}\r\n\t\t\t\t\t\t\twhileTap={{ scale: 0.95 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t<MenuLink to={item.link} key={id}>\r\n\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t</MenuLink>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t  ))\r\n\t\t\t\t: null}\r\n\t\t</UL>\r\n\t)\r\n}\r\n\r\nexport default Navigation\r\n"]},"metadata":{},"sourceType":"module"}