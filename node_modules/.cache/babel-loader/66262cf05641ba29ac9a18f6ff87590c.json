{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/store/Header.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport sanityClient from '../Client';\nexport const HeaderContext = /*#__PURE__*/createContext();\n\nconst HeaderContextProvider = props => {\n  _s();\n\n  const [header, setHeader] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const headerQuery = `*[_type == \"header\"]`;\n    sanityClient.fetch(headerQuery).then(header => {\n      header.forEach(header => {\n        setHeader(header);\n      });\n      setLoaded(true);\n    });\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HeaderContext.Provider, {\n    value: {\n      header\n    },\n    children: loaded ? props.children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HeaderContextProvider, \"tgkORmOsSb/TctTSN4KtuThvD+M=\");\n\n_c = HeaderContextProvider;\nexport default HeaderContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContextProvider\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/store/Header.context.jsx"],"names":["React","useState","useEffect","createContext","sanityClient","HeaderContext","HeaderContextProvider","props","header","setHeader","loaded","setLoaded","headerQuery","fetch","then","forEach","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;;AAEP,MAAMG,qBAAqB,GAAGC,KAAK,IAAI;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,WAAW,GAAI,sBAArB;AACAR,IAAAA,YAAY,CAACS,KAAb,CAAmBD,WAAnB,EAAgCE,IAAhC,CAAqCN,MAAM,IAAI;AAC9CA,MAAAA,MAAM,CAACO,OAAP,CAAeP,MAAM,IAAI;AACxBC,QAAAA,SAAS,CAACD,MAAD,CAAT;AACA,OAFD;AAGAG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,KALD;AAMA;AACA,GATQ,EASN,EATM,CAAT;AAUA,sBACC,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF,KAA/B;AAAA,cACEE,MAAM,GAAGH,KAAK,CAACS,QAAT,GAAoB;AAD5B;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAnBD;;GAAMV,qB;;KAAAA,qB;AAqBN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react'\nimport sanityClient from '../Client'\n\nexport const HeaderContext = createContext()\n\nconst HeaderContextProvider = props => {\n\tconst [header, setHeader] = useState('')\n\tconst [loaded, setLoaded] = useState(false)\n\n\tuseEffect(() => {\n\t\tconst headerQuery = `*[_type == \"header\"]`\n\t\tsanityClient.fetch(headerQuery).then(header => {\n\t\t\theader.forEach(header => {\n\t\t\t\tsetHeader(header)\n\t\t\t})\n\t\t\tsetLoaded(true)\n\t\t})\n\t\treturn\n\t}, [])\n\treturn (\n\t\t<HeaderContext.Provider value={{ header }}>\n\t\t\t{loaded ? props.children : null}\n\t\t</HeaderContext.Provider>\n\t)\n}\n\nexport default HeaderContextProvider\n"]},"metadata":{},"sourceType":"module"}