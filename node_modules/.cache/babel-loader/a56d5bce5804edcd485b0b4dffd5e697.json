{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/components/navbar/hamburger/Example.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { motion, useCycle } from 'framer-motion';\nimport MenuToggle from './MenuToggle';\nimport Navigation from './Navigation';\nimport styled from 'styled-components';\nconst sidebar = {\n  open: () => ({\n    clipPath: `circle(${1000 * 2 + 200}px at 260px 40px)`,\n    transition: {\n      type: 'spring',\n      stiffness: 20,\n      restDelta: 2\n    }\n  }),\n  closed: {\n    clipPath: 'circle(30px at 260px 40px)',\n    transition: {\n      delay: 0.5,\n      type: 'spring',\n      stiffness: 400,\n      damping: 40\n    }\n  }\n};\nconst Container = styled.div`\n\tposition: fixed;\n\theight: 100vh;\n\twidth: 100%;\n\tz-index: 9;\n\tdisplay: none;\n\t@media screen and (min-width: 968px) {\n\t\tdisplay: visible;\n\t}\n\n`;\n_c = Container;\nconst Nav = styled(motion.nav)`\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\twidth: 0;\n\tz-index: 99;\n`;\n_c2 = Nav;\nconst Background = styled(motion.div)`\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\twidth: 300px;\n\tbackground: #fff;\n\topacity: 0.4;\n\ttransition: opacity 0.4s ease-in-out;\n\t@media screen and (min-width: 968px) {\n\t}\n\t@media screen and (max-width: 700px) {\n\t\topacity: 0.7;\n\t}\n`;\n_c3 = Background;\n\nconst Example = () => {\n  _s();\n\n  const [isOpen, toggleOpen] = useCycle(false, true);\n  const [hover, setHover] = useState(false);\n  const BackgroundToggle = useRef(null);\n  useEffect(() => {\n    let style = BackgroundToggle.current.style;\n\n    if (hover || isOpen) {\n      style.opacity = 0.8;\n    } else {\n      style.opacity = 0.4;\n    }\n  }, [isOpen, hover]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      style: isOpen ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      },\n      onClick: () => isOpen ? toggleOpen() : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      initial: false,\n      animate: isOpen ? 'open' : 'closed',\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        ref: BackgroundToggle,\n        variants: sidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isOpen: isOpen,\n        toggle: () => toggleOpen()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MenuToggle, {\n        setHover: setHover,\n        toggle: () => toggleOpen()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Example, \"90CCHYPBHXLrBsC1kwJqNdSomjA=\", false, function () {\n  return [useCycle];\n});\n\n_c4 = Example;\nexport default Example;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Nav\");\n$RefreshReg$(_c3, \"Background\");\n$RefreshReg$(_c4, \"Example\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/components/navbar/hamburger/Example.jsx"],"names":["React","useRef","useState","useEffect","motion","useCycle","MenuToggle","Navigation","styled","sidebar","open","clipPath","transition","type","stiffness","restDelta","closed","delay","damping","Container","div","Nav","nav","Background","Example","isOpen","toggleOpen","hover","setHover","BackgroundToggle","style","current","opacity","display"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\r\nimport { motion, useCycle } from 'framer-motion'\r\nimport MenuToggle from './MenuToggle'\r\nimport Navigation from './Navigation'\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst sidebar = {\r\n\topen: () => ({\r\n\t\tclipPath: `circle(${1000 * 2 + 200}px at 260px 40px)`,\r\n\t\ttransition: {\r\n\t\t\ttype: 'spring',\r\n\t\t\tstiffness: 20,\r\n\t\t\trestDelta: 2,\r\n\t\t},\r\n\t}),\r\n\tclosed: {\r\n\t\tclipPath: 'circle(30px at 260px 40px)',\r\n\r\n\t\ttransition: {\r\n\t\t\tdelay: 0.5,\r\n\t\t\ttype: 'spring',\r\n\t\t\tstiffness: 400,\r\n\t\t\tdamping: 40,\r\n\t\t},\r\n\t},\r\n}\r\n\r\nconst Container = styled.div`\r\n\tposition: fixed;\r\n\theight: 100vh;\r\n\twidth: 100%;\r\n\tz-index: 9;\r\n\tdisplay: none;\r\n\t@media screen and (min-width: 968px) {\r\n\t\tdisplay: visible;\r\n\t}\r\n\r\n`\r\n\r\nconst Nav = styled(motion.nav)`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\twidth: 0;\r\n\tz-index: 99;\r\n`\r\n\r\nconst Background = styled(motion.div)`\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\twidth: 300px;\r\n\tbackground: #fff;\r\n\topacity: 0.4;\r\n\ttransition: opacity 0.4s ease-in-out;\r\n\t@media screen and (min-width: 968px) {\r\n\t}\r\n\t@media screen and (max-width: 700px) {\r\n\t\topacity: 0.7;\r\n\t}\r\n`\r\n\r\nconst Example = () => {\r\n\tconst [isOpen, toggleOpen] = useCycle(false, true)\r\n\tconst [hover, setHover] = useState(false)\r\n\tconst BackgroundToggle = useRef(null)\r\n\tuseEffect(() => {\r\n\t\tlet style = BackgroundToggle.current.style\r\n\t\tif (hover || isOpen) {\r\n\t\t\tstyle.opacity = 0.8\r\n\t\t} else {\r\n\t\t\tstyle.opacity = 0.4\r\n\t\t}\r\n\t}, [isOpen, hover])\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Container\r\n\t\t\t\tstyle={isOpen ? { display: 'block' } : { display: 'none' }}\r\n\t\t\t\tonClick={() => (isOpen ? toggleOpen() : null)}\r\n\t\t\t></Container>\r\n\t\t\t<Nav initial={false} animate={isOpen ? 'open' : 'closed'}>\r\n\t\t\t\t<Background ref={BackgroundToggle} variants={sidebar} />\r\n\t\t\t\t<Navigation isOpen={isOpen} toggle={() => toggleOpen()} />\r\n\t\t\t\t<MenuToggle setHover={setHover} toggle={() => toggleOpen()} />\r\n\t\t\t</Nav>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Example\r\n"]},"metadata":{},"sourceType":"module"}