{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/components/navbar/hamburger/Navigation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport sanityClient from \"../../../Client\";\nconst variants = {\n  open: {\n    transition: {\n      staggerChildren: 0.07,\n      delayChildren: 0.2\n    }\n  },\n  closed: {\n    transition: {\n      staggerChildren: 0.05,\n      staggerDirection: -1\n    }\n  }\n};\nconst MenuLink = styled(Link)`\n  text-decoration: none;\n  padding-top: 20px;\n  width: 100%;\n  color: black;\n  list-style: none;\n`;\n_c = MenuLink;\nconst UL = styled(motion.ul)`\nlist-style: none;\nposition: absolute;\ntop: 100px;\nright: 25px;\nwidth: 100px;\ntransition: 5s all ease;\ntext-decoration: none;\n`;\n_c2 = UL;\nconst List = styled(motion.li)`\n  text-decoration: none;\n  font-size: 18px;\n  color: black;\n  height: 50px;\n`;\n_c3 = List;\nconst linkVariants = {\n  open: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      y: {\n        stiffness: 1000,\n        velocity: -100\n      }\n    }\n  },\n  closed: {\n    y: 50,\n    opacity: 0,\n    transition: {\n      y: {\n        stiffness: 1000\n      }\n    }\n  }\n};\n\nconst Navigation = ({\n  isOpen,\n  toggle\n}) => {\n  _s();\n\n  const [header, setHeader] = useState(\"\");\n  const menuList = useRef(null);\n  useEffect(() => {\n    let timer;\n    window.clearTimeout(timer);\n    let style = menuList.current.style;\n\n    if (style.display === \"none\") {\n      style.display = \"block\";\n    } else {\n      timer = window.setTimeout(() => {\n        style.display = \"none\";\n      }, 300);\n    }\n  }, [isOpen]);\n  useEffect(() => {\n    const headerQuery = `*[_type == \"footer\"]{\n    menu\n  }`;\n    sanityClient.fetch(headerQuery).then(header => {\n      header.forEach(header => {\n        setHeader(header);\n      });\n    });\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UL, {\n    ref: menuList,\n    variants: variants,\n    children: header.menu ? header.menu.map((item, id) => /*#__PURE__*/_jsxDEV(List, {\n      onClick: toggle,\n      variants: linkVariants,\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.95\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuLink, {\n        to: item.link,\n        children: item.name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navigation, \"cYE0OSB9H87lvKAuJQhjmk+8Mzw=\");\n\n_c4 = Navigation;\nexport default Navigation;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MenuLink\");\n$RefreshReg$(_c2, \"UL\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"Navigation\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/components/navbar/hamburger/Navigation.jsx"],"names":["React","useState","useEffect","useRef","motion","Link","styled","sanityClient","variants","open","transition","staggerChildren","delayChildren","closed","staggerDirection","MenuLink","UL","ul","List","li","linkVariants","y","opacity","stiffness","velocity","Navigation","isOpen","toggle","header","setHeader","menuList","timer","window","clearTimeout","style","current","display","setTimeout","headerQuery","fetch","then","forEach","menu","map","item","id","scale","link","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport sanityClient from \"../../../Client\"\r\n\r\nconst variants = {\r\n  open: {\r\n    transition: { staggerChildren: 0.07, delayChildren: 0.2 },\r\n  },\r\n  closed: {\r\n    transition: { staggerChildren: 0.05, staggerDirection: -1 },\r\n  },\r\n}\r\nconst MenuLink = styled(Link)`\r\n  text-decoration: none;\r\n  padding-top: 20px;\r\n  width: 100%;\r\n  color: black;\r\n  list-style: none;\r\n`\r\n\r\nconst UL = styled(motion.ul)`\r\nlist-style: none;\r\nposition: absolute;\r\ntop: 100px;\r\nright: 25px;\r\nwidth: 100px;\r\ntransition: 5s all ease;\r\ntext-decoration: none;\r\n`\r\nconst List = styled(motion.li)`\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  color: black;\r\n  height: 50px;\r\n`\r\nconst linkVariants = {\r\n  open: {\r\n    y: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      y: { stiffness: 1000, velocity: -100 },\r\n    },\r\n  },\r\n  closed: {\r\n    y: 50,\r\n    opacity: 0,\r\n    transition: {\r\n      y: { stiffness: 1000 },\r\n    },\r\n  },\r\n}\r\n\r\nconst Navigation = ({ isOpen, toggle }) => {\r\n  const [header, setHeader] = useState(\"\")\r\n  const menuList = useRef(null)\r\n\r\n  useEffect(() => {\r\n    let timer\r\n    window.clearTimeout(timer)\r\n    let style = menuList.current.style\r\n    if (style.display === \"none\") {\r\n      style.display = \"block\"\r\n    } else {\r\n      timer = window.setTimeout(() => {\r\n        style.display = \"none\"\r\n      }, 300)\r\n    }\r\n  }, [isOpen])\r\n\r\n  useEffect(() => {\r\n    const headerQuery = `*[_type == \"footer\"]{\r\n    menu\r\n  }`\r\n    sanityClient.fetch(headerQuery).then((header) => {\r\n      header.forEach((header) => {\r\n        setHeader(header)\r\n      })\r\n    })\r\n\r\n    return\r\n  }, [])\r\n\r\n  return (\r\n    <UL ref={menuList} variants={variants}>\r\n      {header.menu\r\n        ? header.menu.map((item, id) => (\r\n            <List\r\n              onClick={toggle}\r\n              variants={linkVariants}\r\n              whileHover={{ scale: 1.1 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <MenuLink to={item.link} key={id}>\r\n                {item.name}\r\n              </MenuLink>\r\n            </List>\r\n          ))\r\n        : null}\r\n    </UL>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n"]},"metadata":{},"sourceType":"module"}