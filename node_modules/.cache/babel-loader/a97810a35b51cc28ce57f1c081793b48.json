{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/components/navbar/sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport sanityClient from \"../../Client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport { Link } from \"react-router-dom\";\nconst builder = imageUrlBuilder(sanityClient);\n\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 90%;\n  z-index: 99;\n\n  @media screen and (max-width: 968px) {\n    font-size: 0;\n    width: 50%;\n    justify-content: flex-start;\n  }\n`;\n_c = Container;\nconst LogoBox = styled.img`\n  width: 200px;\n  padding: 0 50px;\n  height: auto;\n\n  @media screen and (max-width: 968px) {\n    transition: 0.8s all ease;\n    padding: 0 15px;\n  }\n  @media screen and (max-width: 400px) {\n    padding: 5px 0 10px 25px;\n    width: 150px;\n  }\n`;\n_c2 = LogoBox;\nconst NavBox = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  padding: 0 30px;\n  gap: 12px;\n  align-items: center;\n  font-size: 16.4px;\n  height: 22px;\n  align-self: flex-start;\n\n  &::nth-child(1) {\n    padding: 50px;\n  }\n\n  @media screen and (max-width: 968px) {\n    display: none;\n  }\n`;\n_c3 = NavBox;\nconst MenuLink = styled(Link)`\n  font-family: Poppins, cursive;\n  text-decoration: none;\n  color: rgba(255, 255, 255, 0.42);\n  z-index: 99;\n  padding: 1rem;\n\n  &:hover {\n    color: rgba(255, 255, 255, 0.666);\n    // vore kul om man kan visa en bild också vid hover\n  }\n`;\n_c4 = MenuLink;\n\nconst Sidebar = () => {\n  _s();\n\n  const [header, setHeader] = useState(\"\");\n  useEffect(() => {\n    const headerQuery = `*[_type == \"header\"]{\n              menu, logo\n          }`;\n    sanityClient.fetch(headerQuery).then(header => {\n      header.forEach(header => {\n        setHeader(header);\n      });\n    });\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBox, {\n      children: header.menu ? header.menu.map((item, id) => /*#__PURE__*/_jsxDEV(MenuLink, {\n        to: item.link,\n        children: item.name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoBox, {\n      className: \"App-logo\",\n      alt: \"TEMC Logo\",\n      src: urlFor(header.logo).url()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"nQZHUFhmSyq/1xw38jWeJTfjzfk=\");\n\n_c5 = Sidebar;\nexport default Sidebar;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"LogoBox\");\n$RefreshReg$(_c3, \"NavBox\");\n$RefreshReg$(_c4, \"MenuLink\");\n$RefreshReg$(_c5, \"Sidebar\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/components/navbar/sidebar.jsx"],"names":["React","useState","useEffect","styled","sanityClient","imageUrlBuilder","Link","builder","urlFor","source","image","Container","div","LogoBox","img","NavBox","MenuLink","Sidebar","header","setHeader","headerQuery","fetch","then","forEach","menu","map","item","id","link","name","logo","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,OAAO,GAAGF,eAAe,CAACD,YAAD,CAA/B;;AACA,SAASI,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOF,OAAO,CAACG,KAAR,CAAcD,MAAd,CAAP;AACD;;AAED,MAAME,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;KAAMD,S;AAkBN,MAAME,OAAO,GAAGV,MAAM,CAACW,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,O;AAeN,MAAME,MAAM,GAAGZ,MAAM,CAACS,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMG,M;AAoBN,MAAMC,QAAQ,GAAGb,MAAM,CAACG,IAAD,CAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMU,Q;;AAaN,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,WAAW,GAAI;AACzB;AACA,YAFI;AAGAhB,IAAAA,YAAY,CAACiB,KAAb,CAAmBD,WAAnB,EAAgCE,IAAhC,CAAsCJ,MAAD,IAAY;AAC/CA,MAAAA,MAAM,CAACK,OAAP,CAAgBL,MAAD,IAAY;AACzBC,QAAAA,SAAS,CAACD,MAAD,CAAT;AACD,OAFD;AAGD,KAJD;AAMA;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE,QAAC,SAAD;AAAW,IAAA,EAAE,EAAC,QAAd;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,gBACGA,MAAM,CAACM,IAAP,GACGN,MAAM,CAACM,IAAP,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,EAAP,kBACd,QAAC,QAAD;AAAU,QAAA,EAAE,EAAED,IAAI,CAACE,IAAnB;AAAA,kBACGF,IAAI,CAACG;AADR,SAA8BF,EAA9B;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAMG;AAPN;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,OAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,GAAG,EAAC,WAFN;AAGE,MAAA,GAAG,EAAEnB,MAAM,CAACU,MAAM,CAACY,IAAR,CAAN,CAAoBC,GAApB;AAHP;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAnCD;;GAAMd,O;;MAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport sanityClient from \"../../Client\"\nimport imageUrlBuilder from \"@sanity/image-url\"\nimport { Link } from \"react-router-dom\"\n\nconst builder = imageUrlBuilder(sanityClient)\nfunction urlFor(source) {\n  return builder.image(source)\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 90%;\n  z-index: 99;\n\n  @media screen and (max-width: 968px) {\n    font-size: 0;\n    width: 50%;\n    justify-content: flex-start;\n  }\n`\n\nconst LogoBox = styled.img`\n  width: 200px;\n  padding: 0 50px;\n  height: auto;\n\n  @media screen and (max-width: 968px) {\n    transition: 0.8s all ease;\n    padding: 0 15px;\n  }\n  @media screen and (max-width: 400px) {\n    padding: 5px 0 10px 25px;\n    width: 150px;\n  }\n`\n\nconst NavBox = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  padding: 0 30px;\n  gap: 12px;\n  align-items: center;\n  font-size: 16.4px;\n  height: 22px;\n  align-self: flex-start;\n\n  &::nth-child(1) {\n    padding: 50px;\n  }\n\n  @media screen and (max-width: 968px) {\n    display: none;\n  }\n`\n\nconst MenuLink = styled(Link)`\n  font-family: Poppins, cursive;\n  text-decoration: none;\n  color: rgba(255, 255, 255, 0.42);\n  z-index: 99;\n  padding: 1rem;\n\n  &:hover {\n    color: rgba(255, 255, 255, 0.666);\n    // vore kul om man kan visa en bild också vid hover\n  }\n`\n\nconst Sidebar = () => {\n  const [header, setHeader] = useState(\"\")\n\n  useEffect(() => {\n    const headerQuery = `*[_type == \"header\"]{\n              menu, logo\n          }`\n    sanityClient.fetch(headerQuery).then((header) => {\n      header.forEach((header) => {\n        setHeader(header)\n      })\n    })\n\n    return\n  }, [])\n\n  return (\n    <Container id=\"navbar\">\n      <Link to=\"/\"></Link>\n      <NavBox>\n        {header.menu\n          ? header.menu.map((item, id) => (\n              <MenuLink to={item.link} key={id}>\n                {item.name}\n              </MenuLink>\n            ))\n          : null}\n      </NavBox>\n      <LogoBox\n        className=\"App-logo\"\n        alt=\"TEMC Logo\"\n        src={urlFor(header.logo).url()}\n      />\n    </Container>\n  )\n}\n\nexport default Sidebar\n"]},"metadata":{},"sourceType":"module"}