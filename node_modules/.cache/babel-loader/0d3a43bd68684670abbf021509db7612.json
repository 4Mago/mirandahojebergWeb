{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/store/Tagline.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport sanityClient from '../Client';\nexport const TaglineContext = /*#__PURE__*/createContext();\n\nconst TaglineContextProvider = props => {\n  _s();\n\n  const [tagline, setTagline] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const taglineQuery = `*[_type == \"tagline\"]`;\n    sanityClient.fetch(taglineQuery).then(tagline => {\n      tagline.forEach(tagline => {\n        setTagline(tagline);\n        setLoaded(true);\n      });\n    });\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TaglineContext.Provider, {\n    value: {\n      tagline\n    },\n    children: loaded ? props.children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TaglineContextProvider, \"4G5+vXO+/w4/Gu1ZMesoLvAKmUM=\");\n\n_c = TaglineContextProvider;\nexport default TaglineContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaglineContextProvider\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/store/Tagline.context.jsx"],"names":["React","useState","useEffect","createContext","sanityClient","TaglineContext","TaglineContextProvider","props","tagline","setTagline","loaded","setLoaded","taglineQuery","fetch","then","forEach","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,OAAO,MAAMC,cAAc,gBAAGF,aAAa,EAApC;;AAEP,MAAMG,sBAAsB,GAAGC,KAAK,IAAI;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,YAAY,GAAI,uBAAtB;AACAR,IAAAA,YAAY,CAACS,KAAb,CAAmBD,YAAnB,EAAiCE,IAAjC,CAAsCN,OAAO,IAAI;AAChDA,MAAAA,OAAO,CAACO,OAAR,CAAgBP,OAAO,IAAI;AAC1BC,QAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,QAAAA,SAAS,CAAC,IAAD,CAAT;AACA,OAHD;AAIA,KALD;AAMA;AACA,GATQ,EASN,EATM,CAAT;AAUA,sBACC,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF,KAAhC;AAAA,cACEE,MAAM,GAAGH,KAAK,CAACS,QAAT,GAAoB;AAD5B;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAlBD;;GAAMV,sB;;KAAAA,sB;AAoBN,eAAeA,sBAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react'\nimport sanityClient from '../Client'\n\nexport const TaglineContext = createContext()\n\nconst TaglineContextProvider = props => {\n\tconst [tagline, setTagline] = useState('')\n\tconst [loaded, setLoaded] = useState(false)\n\tuseEffect(() => {\n\t\tconst taglineQuery = `*[_type == \"tagline\"]`\n\t\tsanityClient.fetch(taglineQuery).then(tagline => {\n\t\t\ttagline.forEach(tagline => {\n\t\t\t\tsetTagline(tagline)\n\t\t\t\tsetLoaded(true)\n\t\t\t})\n\t\t})\n\t\treturn\n\t}, [])\n\treturn (\n\t\t<TaglineContext.Provider value={{ tagline }}>\n\t\t\t{loaded ? props.children : null}\n\t\t</TaglineContext.Provider>\n\t)\n}\n\nexport default TaglineContextProvider\n"]},"metadata":{},"sourceType":"module"}