{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/store/projects.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport sanityClient from '../Client';\nexport const ProjectsContext = /*#__PURE__*/createContext();\n\nconst ProjectsContextProvider = props => {\n  _s();\n\n  const [projects, setProjects] = useState('');\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const projectsQuery = `*[_type == \"client\"]{\n\t\t\tclientName, logo, \"imageUrl\": websiteImage.asset->url, description, websiteLink\n\t\t}`;\n    sanityClient.fetch(projectsQuery).then(projects => {\n      const projectsArray = [];\n      projects.forEach(projects => {\n        projectsArray.push(projects);\n      });\n      setProjects(projectsArray);\n      setLoaded(true);\n    });\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProjectsContext.Provider, {\n    value: {\n      projects\n    },\n    children: loaded ? props.children : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProjectsContextProvider, \"ItgVGjxzG5DzGEeG5vTfw0yyKf8=\");\n\n_c = ProjectsContextProvider;\nexport default ProjectsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsContextProvider\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/store/projects.context.jsx"],"names":["React","useState","useEffect","createContext","sanityClient","ProjectsContext","ProjectsContextProvider","props","projects","setProjects","loaded","setLoaded","projectsQuery","fetch","then","projectsArray","forEach","push","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAArC;;AAEP,MAAMG,uBAAuB,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,aAAa,GAAI;AACzB;AACA,IAFE;AAGAR,IAAAA,YAAY,CAACS,KAAb,CAAmBD,aAAnB,EAAkCE,IAAlC,CAAuCN,QAAQ,IAAI;AAClD,YAAMO,aAAa,GAAG,EAAtB;AACAP,MAAAA,QAAQ,CAACQ,OAAT,CAAiBR,QAAQ,IAAI;AAC5BO,QAAAA,aAAa,CAACE,IAAd,CAAmBT,QAAnB;AACA,OAFD;AAGAC,MAAAA,WAAW,CAACM,aAAD,CAAX;AACAJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,KAPD;AAQA;AACA,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACC,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF,KAAjC;AAAA,cACEE,MAAM,GAAGH,KAAK,CAACW,QAAT,GAAoB;AAD5B;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAtBD;;GAAMZ,uB;;KAAAA,uB;AAwBN,eAAeA,uBAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react'\nimport sanityClient from '../Client'\n\nexport const ProjectsContext = createContext()\n\nconst ProjectsContextProvider = props => {\n\tconst [projects, setProjects] = useState('')\n\tconst [loaded, setLoaded] = useState(false)\n\tuseEffect(() => {\n\t\tconst projectsQuery = `*[_type == \"client\"]{\n\t\t\tclientName, logo, \"imageUrl\": websiteImage.asset->url, description, websiteLink\n\t\t}`\n\t\tsanityClient.fetch(projectsQuery).then(projects => {\n\t\t\tconst projectsArray = []\n\t\t\tprojects.forEach(projects => {\n\t\t\t\tprojectsArray.push(projects)\n\t\t\t})\n\t\t\tsetProjects(projectsArray)\n\t\t\tsetLoaded(true)\n\t\t})\n\t\treturn\n\t}, [])\n\treturn (\n\t\t<ProjectsContext.Provider value={{ projects }}>\n\t\t\t{loaded ? props.children : null}\n\t\t</ProjectsContext.Provider>\n\t)\n}\n\nexport default ProjectsContextProvider\n"]},"metadata":{},"sourceType":"module"}