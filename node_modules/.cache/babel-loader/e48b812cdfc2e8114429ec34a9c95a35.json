{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/magimug/Desktop/snakeweb/src/pages/project-extended.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport Projects from \"../components/projects/projects\";\nimport sanityClient from \"../Client\";\nconst ImgContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-top: 12vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = ImgContainer;\nconst TextContainer = styled(motion.div)`\n  max-width: 100%;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-right: 20px;\n  @media screen and (max-width: 1000px) {\n    padding: 0;\n    margin-right: 0;\n  }\n  @media screen and (max-width: 900px) {\n    width: 100%;\n    padding: 0;\n  }\n`;\n_c2 = TextContainer;\nconst HeaderText = styled(motion.h2)``;\n_c3 = HeaderText;\nconst Text = styled(motion.p)`\n  padding-bottom: 25px;\n  max-width: 600px;\n\n  @media screen and (max-width: 700px) {\n    text-align: center;\n    padding: 0;\n  }\n  @media screen and (max-width: 400px) {\n    font-size: 14px;\n  }\n`;\n_c4 = Text;\nconst transition = {\n  duration: 0.35,\n  ease: [0.8, 0.013, 0.23, 0.96]\n};\n\nconst ProjectExtended = () => {\n  _s();\n\n  const [project, setProject] = useState(\"\");\n  useEffect(() => {\n    const projectQuery = `*[_type == \"client\"] | order(date desc)`;\n    sanityClient.fetch(projectQuery).then(project => {\n      const projectArray = [];\n      project.forEach(project => {\n        projectArray.push(project);\n      });\n      setProject(projectArray);\n    });\n    return;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    exit: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    initial: {\n      opacity: 0\n    },\n    transition: transition,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: projectExt.websiteLink,\n      children: /*#__PURE__*/_jsxDEV(ImgContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderText, {\n        children: projectExt.clientName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: projectExt.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectExtended, \"jlLeZRDwj1UWmxqWk/gtD8mMRl0=\");\n\n_c5 = ProjectExtended;\nexport default ProjectExtended;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ImgContainer\");\n$RefreshReg$(_c2, \"TextContainer\");\n$RefreshReg$(_c3, \"HeaderText\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"ProjectExtended\");","map":{"version":3,"sources":["/Users/magimug/Desktop/snakeweb/src/pages/project-extended.component.jsx"],"names":["React","useState","useEffect","styled","useParams","motion","Projects","sanityClient","ImgContainer","div","TextContainer","HeaderText","h2","Text","p","transition","duration","ease","ProjectExtended","project","setProject","projectQuery","fetch","then","projectArray","forEach","push","opacity","projectExt","websiteLink","clientName","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AAEA,MAAMC,YAAY,GAAGL,MAAM,CAACM,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,Y;AASN,MAAME,aAAa,GAAGP,MAAM,CAACE,MAAM,CAACI,GAAR,CAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMC,a;AAkBN,MAAMC,UAAU,GAAGR,MAAM,CAACE,MAAM,CAACO,EAAR,CAAY,EAArC;MAAMD,U;AAEN,MAAME,IAAI,GAAGV,MAAM,CAACE,MAAM,CAACS,CAAR,CAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,I;AAaN,MAAME,UAAU,GAAG;AAAEC,EAAAA,QAAQ,EAAE,IAAZ;AAAkBC,EAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,EAAmB,IAAnB;AAAxB,CAAnB;;AACA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,YAAY,GAAI,yCAAtB;AACAd,IAAAA,YAAY,CAACe,KAAb,CAAmBD,YAAnB,EAAiCE,IAAjC,CAAuCJ,OAAD,IAAa;AACjD,YAAMK,YAAY,GAAG,EAArB;AACAL,MAAAA,OAAO,CAACM,OAAR,CAAiBN,OAAD,IAAa;AAC3BK,QAAAA,YAAY,CAACE,IAAb,CAAkBP,OAAlB;AACD,OAFD;AAGAC,MAAAA,UAAU,CAACI,YAAD,CAAV;AACD,KAND;AAOA;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,IAAI,EAAE;AAAEG,MAAAA,OAAO,EAAE;AAAX,KADR;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAFX;AAGE,IAAA,OAAO,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAHX;AAIE,IAAA,UAAU,EAAEZ,UAJd;AAAA,4BASE;AAAG,MAAA,IAAI,EAAEa,UAAU,CAACC,WAApB;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAeE,QAAC,aAAD;AAAA,8BACE,QAAC,UAAD;AAAA,kBAAaD,UAAU,CAACE;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA,kBAAOF,UAAU,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAoBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAtCD;;GAAMb,e;;MAAAA,e;AAwCN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { useParams } from \"react-router-dom\"\nimport { motion } from \"framer-motion\"\nimport Projects from \"../components/projects/projects\"\nimport sanityClient from \"../Client\"\n\nconst ImgContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  margin-top: 12vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst TextContainer = styled(motion.div)`\n  max-width: 100%;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-right: 20px;\n  @media screen and (max-width: 1000px) {\n    padding: 0;\n    margin-right: 0;\n  }\n  @media screen and (max-width: 900px) {\n    width: 100%;\n    padding: 0;\n  }\n`\n\nconst HeaderText = styled(motion.h2)``\n\nconst Text = styled(motion.p)`\n  padding-bottom: 25px;\n  max-width: 600px;\n\n  @media screen and (max-width: 700px) {\n    text-align: center;\n    padding: 0;\n  }\n  @media screen and (max-width: 400px) {\n    font-size: 14px;\n  }\n`\n\nconst transition = { duration: 0.35, ease: [0.8, 0.013, 0.23, 0.96] }\nconst ProjectExtended = () => {\n  const [project, setProject] = useState(\"\")\n\n  useEffect(() => {\n    const projectQuery = `*[_type == \"client\"] | order(date desc)`\n    sanityClient.fetch(projectQuery).then((project) => {\n      const projectArray = []\n      project.forEach((project) => {\n        projectArray.push(project)\n      })\n      setProject(projectArray)\n    })\n    return\n  }, [])\n  return (\n    <motion.div\n      exit={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      initial={{ opacity: 0 }}\n      transition={transition}\n    >\n      {/* <h1 style={{ zIndex: 99, position: 'relative' }}>\n\t\t\t\t{pos.project.clientName}\n\t\t\t</h1> */}\n      <a href={projectExt.websiteLink}>\n        <ImgContainer>\n          {/* <ClientImage image={projectExt.websiteImage} /> */}\n        </ImgContainer>\n      </a>\n\n      <TextContainer>\n        <HeaderText>{projectExt.clientName}</HeaderText>\n        <Text>{projectExt.description}</Text>\n      </TextContainer>\n\n      <Projects />\n    </motion.div>\n  )\n}\n\nexport default ProjectExtended\n"]},"metadata":{},"sourceType":"module"}